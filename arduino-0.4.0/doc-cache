# doc-cache created by Octave 5.1.0
# name: cache
# type: cell
# rows: 3
# columns: 7
# name: <cell-element>
# type: sq_string
# elements: 1
# length: 5
addon


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 660
 -- RETVAL = addon (AR, ADDONNAME)
 -- RETVAL = addon (AR, ADDONNAME, varargs)
     Create an addon object using the addon named class.

     Inputs
     ......

     AR - connected arduino object

     ADDONNAME - the name of the addon to create.  The addon name can be
     a user addon or an inbuilt addon, however must appear in the
     listArduinoLibraries output and have been programmed onto the
     arduino.

     VARARGS - optional values that will be provided verbatim to the the
     addon class constructor.

     Outputs
     .......

     RETVAL - cell array of string library names.

     See also: arduino, arduinosetup, listArduinoLibraries.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 51
Create an addon object using the addon named class.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 17
arduino_bistsetup


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 868
 -- RETVAL = arduino_bistsetup ()
 -- RETVAL = arduino_bistsetup (PROPERTYNAME, PROPERTYVALUE)
     Install on an arduino the required core libraries to run the BIST
     tests

     As part of the setup, the arduino IDE will be opened to allow
     programming the arduino board.

     Inputs
     ......

     PROPERTYNAME, PROPERTYVALUE - A sequence of property name/value
     pairs can be given to set defaults while programming.

     Currently the following properties can be set:
     arduinobinary
          The value should be the name/path of the arduino IDE binary
          for programming.  If not specified, the function will attempt
          to find the binary itself.
     debug
          Set the debug flag when checking the arduino

     Outputs
     .......

     RETVAL - return 1 if everything installed ok

     See also: arduino, arduinosetup.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 71
Install on an arduino the required core libraries to run the BIST tests



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 12
arduinosetup


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 1037
 -- RETVAL = arduinosetup ()
 -- RETVAL = arduinosetup (PROPERTYNAME, PROPERTYVALUE)
     Open the arduino config / programming tool to program the arduino
     hardware for usage with the Octave arduino functions.

     arduinosetup will create a temporary project using the arduino IDE
     and allow compiling and programming of the code to an arduino.

     Inputs
     ......

     PROPERTYNAME, PROPERTYVALUE - A sequence of property name/value
     pairs can be given to set defaults while programming.

     Currently the following properties can be set:
     libraries
          The value should be the name of a library, or string array of
          libraries to program on the arduino board.
     arduinobinary
          The value should be the name/path of the arduino IDE binary
          for programming.  If not specified, the function will attempt
          to find the binary itself.

     Outputs
     .......

     RETVAL - return 1 if arduino IDE returned without an error

     See also: arduino, __arduino_binary__.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 80
Open the arduino config / programming tool to program the arduino
hardware fo...



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 9
isarduino


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 337
 -- RETVAL = isarduino (OBJ)
     Check if input value is an arduino object

     Function is essentially just a call of ' retval = asis(obj,
     "arduino"); '

     Inputs
     ......

     OBJ - The object to check

     Outputs
     .......

     RETVAL is true, if obj is an arduino object, false otherwise.

     See also: arduino.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 41
Check if input value is an arduino object



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 20
listArduinoLibraries


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 634
 -- RETVAL = listArduinoLibraries ()
 -- RETVAL = listArduinoLibraries (LIBTYPES)
     Retrieve list of all known arduino library modules that are
     available.

     Inputs
     ......

     LIBTYPES - optional specifier for type of libraries to list.

     Options are:
     all
          List core and addons
     core
          List core only libraries
     addons
          List addons only
     When no libtypes is specified, all libraries are shown.

     Outputs
     .......

     RETVAL is an cell array of string library names that are available
     for programming to the arduino.

     See also: arduino, arduinosetup.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 70
Retrieve list of all known arduino library modules that are available.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 15
scanForArduinos


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 945
 -- RETVAL = scanForArduinos (MAXCOUNT)
 -- RETVAL = scanForArduinos (MAXCOUNT, TYPE)
     Scan system for programmed arduino boards.

     scanForArduinos will scan the system for programmed arduino boards
     and return at most MAXCOUNT of them as a cell array in RETVAL.

     Inputs
     ......

     MAXCOUNT - max number of arduino boards to detect.  if MAXCOUNT is
     not specified, or is a less than 1, the function will return as
     many arduino boards as it can detect.

     TYPE - optional board type to match.  If specified, the board type
     must match for the arduino to be added to the return list.

     Outputs
     .......

     RETVAL structure cell array of matching detected arduino boards.

     Each cell value of the cell array will contain a structure with
     values of:
     port
          the serial port the arduino is connected to
     board
          the board type of the arduino

     See also: arduino.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 42
Scan system for programmed arduino boards.



# name: <cell-element>
# type: sq_string
# elements: 1
# length: 10
scanI2Cbus


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 762
 -- RETVAL = scanI2Cbus (AR)
 -- RETVAL = scanI2Cbus (AR, BUS)
     Scan arduino for devices on the I2C bus.

     Inputs
     ......

     AR - arduino object connected to a arduino board.

     BUS - bus number to scan I2C devices, when multiple buses are
     available.  If the bus is not specified, it will default to 0.

     Outputs
     .......

     RETVAL - cell array of addresses as strings in format of "0xXX".

     Example
     .......


          # create arduino connection.
          ar = arduino();
          # scan for devices on the I2C bus
          scanI2Cbus (ar)
          # output is each detected i2c address as a string
          ans =
          {
           [1,1] = 0x50
          }


     See also: arduino, i2cdev, checkI2CAddress.


# name: <cell-element>
# type: sq_string
# elements: 1
# length: 40
Scan arduino for devices on the I2C bus.





